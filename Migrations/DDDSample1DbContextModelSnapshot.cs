// <auto-generated />
using System;
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DDDNetCore.Migrations
{
    [DbContext(typeof(DDDSample1DbContext))]
    partial class DDDSample1DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DDDNetcore.Domain.Relacoes.Relacao", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("JogadorA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JogadorB")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Relacoes");
                });

            modelBuilder.Entity("DDDSample1.Domain.Categories.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DDDSample1.Domain.EstadosHumor.EstadoHumor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstadosHumor");
                });

            modelBuilder.Entity("DDDSample1.Domain.Families.Family", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("DDDSample1.Domain.Introducoes.Introducao", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("JogadorInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JogadorIntermedio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JogadorObjetivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Introducoes");
                });

            modelBuilder.Entity("DDDSample1.Domain.PedidosLigacao.PedidoLigacao", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("jogadorInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jogadorObjetivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PedidosLigacao");
                });

            modelBuilder.Entity("DDDSample1.Domain.Products.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DDDSample1.Domain.Tags.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Jogador", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoHumor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("DDDNetcore.Domain.Relacoes.Relacao", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Relacoes.DataRelacao", "DataRelacao", b1 =>
                        {
                            b1.Property<string>("RelacaoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("_DataRelacao")
                                .HasColumnType("datetime2");

                            b1.HasKey("RelacaoId");

                            b1.ToTable("Relacoes");

                            b1.WithOwner()
                                .HasForeignKey("RelacaoId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Relacoes.ForcaLigacao", "ForcaLigacao", b1 =>
                        {
                            b1.Property<string>("RelacaoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("_ForcaLigacao")
                                .HasColumnType("int");

                            b1.HasKey("RelacaoId");

                            b1.ToTable("Relacoes");

                            b1.WithOwner()
                                .HasForeignKey("RelacaoId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Relacoes.ForcaRelacao", "ForcaRelacao", b1 =>
                        {
                            b1.Property<string>("RelacaoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("_ForcaRelacao")
                                .HasColumnType("int");

                            b1.HasKey("RelacaoId");

                            b1.ToTable("Relacoes");

                            b1.WithOwner()
                                .HasForeignKey("RelacaoId");
                        });

                    b.OwnsMany("DDDSample1.Domain.Tags.TagidString", "TagsRelacao", b1 =>
                        {
                            b1.Property<string>("RelacaoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("jogadorid")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("tagid")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RelacaoId", "Id");

                            b1.ToTable("Relacoes_TagsRelacao");

                            b1.WithOwner()
                                .HasForeignKey("RelacaoId");
                        });

                    b.Navigation("DataRelacao");

                    b.Navigation("ForcaLigacao");

                    b.Navigation("ForcaRelacao");

                    b.Navigation("TagsRelacao");
                });

            modelBuilder.Entity("DDDSample1.Domain.EstadosHumor.EstadoHumor", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.EstadosHumor.DataEstadoHumor", "DataEstadoHumor", b1 =>
                        {
                            b1.Property<string>("EstadoHumorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("_DataEstadoHumor")
                                .HasColumnType("datetime2");

                            b1.HasKey("EstadoHumorId");

                            b1.ToTable("EstadosHumor");

                            b1.WithOwner()
                                .HasForeignKey("EstadoHumorId");
                        });

                    b.Navigation("DataEstadoHumor");
                });

            modelBuilder.Entity("DDDSample1.Domain.Introducoes.Introducao", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Introducoes.MensagemIntroducao", "MensagemIntroducaoIntermedio", b1 =>
                        {
                            b1.Property<string>("IntroducaoId")
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("IntroducaoId");

                            b1.ToTable("Introducoes");

                            b1.WithOwner()
                                .HasForeignKey("IntroducaoId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Introducoes.MensagemIntroducao", "MensagemIntroducaoObjetivo", b1 =>
                        {
                            b1.Property<string>("IntroducaoId")
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("IntroducaoId");

                            b1.ToTable("Introducoes");

                            b1.WithOwner()
                                .HasForeignKey("IntroducaoId");
                        });

                    b.Navigation("MensagemIntroducaoIntermedio");

                    b.Navigation("MensagemIntroducaoObjetivo");
                });

            modelBuilder.Entity("DDDSample1.Domain.Tags.Tag", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Tags.Descricao", "Descricao", b1 =>
                        {
                            b1.Property<string>("TagId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("_Descricao")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TagId");

                            b1.ToTable("Tags");

                            b1.WithOwner()
                                .HasForeignKey("TagId");
                        });

                    b.Navigation("Descricao");
                });

            modelBuilder.Entity("Jogador", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Jogadores.DataNascimento", "DataNascimento", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("_DataNascimento")
                                .HasColumnType("datetime2");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Jogadores.Email", "Email", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("_Email")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Jogadores.FacebookPerfil", "FacebookPerfil", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("_FacebookPerfil")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Jogadores.LinkedInPerfil", "LinkedInPerfil", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("_LinkedInPerfil")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Jogadores.Morada", "Morada", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("_CodigoPostal")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("_Localidade")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("_Pais")
                                .HasColumnType("int");

                            b1.Property<string>("_Rua")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Jogadores.Nome", "Nome", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("_Nome")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Jogadores.Pontuacao", "Pontuacao", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("_Pontuacao")
                                .HasColumnType("int");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Jogadores.Telefone", "Telefone", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("_Telefone")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsMany("DDDSample1.Domain.Tags.TagidString", "InterestTags", b1 =>
                        {
                            b1.Property<string>("jogadorid")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("tagid")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("jogadorid", "Id");

                            b1.ToTable("Jogadores_InterestTags");

                            b1.WithOwner()
                                .HasForeignKey("jogadorid");
                        });

                    b.Navigation("DataNascimento");

                    b.Navigation("Email");

                    b.Navigation("FacebookPerfil");

                    b.Navigation("InterestTags");

                    b.Navigation("LinkedInPerfil");

                    b.Navigation("Morada");

                    b.Navigation("Nome");

                    b.Navigation("Pontuacao");

                    b.Navigation("Telefone");
                });
#pragma warning restore 612, 618
        }
    }
}
