@startuml
autonumber

participant ":PedidosLigacaoController" as CTRL1
participant ":PedidoLigacaoService" as S1
participant ":PedidoLigacaoRepository" as REPO1
participant ":PedidoLigacao" as R1
participant ":RelacoesController" as CTRL
participant ":RelacaoService" as S
participant ":RelacaoRepository" as REPO
participant ":Relacao" as R
participant ":UnitOfWork" as UOW
participant ":RelacaoDTO" as DTO


?o-> CTRL1 : DELETE (.../api/PedidoLigacao,dto)
activate CTRL1
    CTRL1 -> S1: DeleteAsync(pedidoLigacaoId,relacaoDto)
    activate S1
        S1 -> REPO1: GetByIdAsync(pedidoLigacaoId)
                activate REPO1
                deactivate REPO1
        S1 -> REPO1: Remove(pedidoLigacao)
        activate REPO1
        deactivate REPO1
        S1 -> REPO: AddAsync(relacao)
                activate REPO
                deactivate REPO
                S1-> UOW: CommitAsync()
                activate UOW
                deactivate UOW
                S1-> DTO **:  create()
            S1-->CTRL1 : Sucesso(novoDTO)
            deactivate S1
            [o<-\ CTRL1: Sucesso(novoDTO)
deactivate CTRL1


@enduml

@startuml
'https://plantuml.com/sequence-diagram

autonumber

actor "Jogador" as J

participant ":Route" as R
participant ":PedidosComponent View" as CV
participant ":PedidosComponent" as C
participant "dto: RelacaoDTO" as DTO
participant ":PedidoLigacaoService" as SERV

activate J
    J->R : /account/pedidos
    activate R
        R->CV : redirectTo()
    deactivate R
    activate CV
        CV->C : getPedidosLigacao()
        activate C
            C->SERV : getPedidosLigacaoPendentes()
                activate SERV
                    SERV->o] : GET(.../api/pedidosligacao/jogadorid)
                    SERV<--/o] : listaPedidosLigacao
                    SERV-->C : listaPedidosLigacao
                deactivate SERV
            C-->CV : listaPedidosLigacao
        deactivate C
        CV-->J : show listaPedidosLigacao
    deactivate CV
    alt
    J->CV : aceita pedido
    activate CV
        CV->C : aceitar()
        activate C
            C-->DTO ** : create()
            C->SERV : aceitar(dto)
            activate SERV
                SERV->o] : DELETE(.../api/pedidosligacao/decis1,dto)
            deactivate SERV
        deactivate C
    deactivate CV
    else                
    J->CV : rejeita pedido
    activate CV
        CV->C : rejeitar()
        activate C
            C-->DTO ** : create()
            C->SERV : rejeitar(dto)
            activate SERV
                SERV->o] : DELETE(.../api/pedidosligacao/decis0,dto)
    end
                SERV<--/o] : Sucesso(newDTO)
                SERV-->C : Sucesso
            deactivate SERV
        C-->CV : Sucesso
        deactivate C
        CV-->J : Sucesso
    deactivate CV
deactivate J
            
        
   
        

@enduml